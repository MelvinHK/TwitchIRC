<!DOCTYPE html>
<html lang="en">

<head>
    <link href="bootstrap.css" rel="stylesheet">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Twitch Chat Relay</title>
</head>

<body>
    <div class="container row mx-auto my-5">
        <div class="col-sm-5 mx-auto">
            <h1>Twitch Chat Relay</h1>
            <h5>Currently relaying: <span id="channel" class="text-muted" style="font-weight: normal;">
                    <% if (currentChannel) { %>
                        <%= currentChannel %>
                            <% } else { %>
                                none
                                <% } %>
                </span></h5>
            <!-- Search bar -->
            <div class="my-4">
                <div class="input-group mb-3 w-100">
                    <input id="channelSearch" type="text" class="form-control" placeholder="Channel name" autofocus>
                    <div class="input-group-append">
                        <button id="relayBtn" class="btn btn-outline-secondary" type="button"
                            onClick="search()">Relay</button>
                    </div>
                </div>
                <!-- Filter options -->
                <div class="card mb-3">
                    <div class="card-body justify-content-center">
                        <h5 class="card-title">Filter options</h5>
                        <div class="w-100">
                            <p class="text-muted">Seperate tags by commas</p>
                            <input id="userSearch" type="text" class="form-control mb-3" placeholder="Username(s)">
                            <div class="input-group mb-3">
                                <input id="includes" type="text" class="form-control" placeholder="Includes">
                                <input id="excludes" type="text" class="form-control" placeholder="Excludes">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col text-right">
                                <button class="btn btn-outline-secondary" type="button"
                                    onclick="clearFilter()">Clear</button>
                                <button class="btn btn-outline-secondary" type="button"
                                    onclick="setFilter()">Apply</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col text-center">
                        <button id="pauseBtn" class="btn btn-outline-danger" style="font-family: 'Segoe UI Symbol'" onclick="stop()">&#x23F8</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Chat -->
        <div class="mx-auto card overflow-auto" style="width: 50%; height: 588px; flex-direction: column-reverse;">
            <ul class="list-group list-group-flush">
                <li id="connectionMsg" class="list-group-item text-muted border-0"></li>
                <div id="messages"></div>
            </ul>
        </div>
    </div>
    <script>
        var newChannel = "";
        var ids = [];
        var maxMessages = 100;
        var rate = 100;

        var usernameFilter = [];
        var includes = [];
        var excludes = [];

        var stopped = false;

        //fetch messages
        async function fetchMessages() {
            var content = await fetch("/messages").then(function (response) {
                return response.json();
            });
            if (content.id != ids[ids.length - 1] && (newChannel == "" || content.channel == newChannel) && filter(content)) { //so the previous message isn't displayed again each interval, and the previous channel's messages don't leak into the new one.
                var node = document.createElement("li");
                node.setAttribute("id", content.id);
                node.className = "list-group-item border-0";

                var user = document.createTextNode(content.user);
                var color = document.createElement("span");
                color.style.cssText = "color: " + content.color + "; filter: brightness(85%);"; //apply username's color, decrease luminosity a bit
                color.appendChild(user);

                var message = document.createTextNode(": " + content.message);
                node.appendChild(color);
                node.appendChild(message);
                document.getElementById("messages").appendChild(node);
                ids.push(content.id);
                if (document.getElementById("messages").getElementsByTagName("li").length > maxMessages) {
                    document.getElementById(ids[0]).remove();
                    ids.shift();
                }
            }
        }

        let intervalId = setInterval(fetchMessages, rate);

        //channel search
        function search() {
            var name = document.getElementById("channelSearch").value;
            if (!name || name.match(/^\s*$/)) return; //don't search if value is empty or just whitespaces
            clear();
            var data = {
                name: name
            }
            fetch("/search", {
                method: "POST",
                body: JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json"
                }
            });
            newChannel = name;
            var punc = name[name.length - 1] == "s" ? "'" : "'s";
            document.getElementById("channel").innerHTML = name;
            document.getElementById("connectionMsg").innerHTML = "Relaying " + name + punc + " chatroom";
            if (stopped)
                stop();
        }

        function setFilter() {
            var u = document.getElementById("userSearch").value;
            var i = document.getElementById("includes").value;
            var e = document.getElementById("excludes").value;

            (u.length != 0 || !u.match(/^\s*$/)) ?
                usernameFilter = document.getElementById("userSearch").value.toUpperCase().split(/[\s,]+/) : usernameFilter.length = 0;

            (i.length != 0 || !i.match(/^\s*$/)) ?
                includes = document.getElementById("includes").value.toUpperCase().split(/[\s,]+/) : includes.length = 0;

            (e.length != 0 || !e.match(/^\s*$/)) ?
                excludes = document.getElementById("excludes").value.toUpperCase().split(/[\s,]+/) : excludes.length = 0;
        }

        function clearFilter() {
            usernameFilter.length = 0;
            includes.length = 0;
            excludes.length = 0;
            document.getElementById("userSearch").value = "";
            document.getElementById("includes").value = "";
            document.getElementById("excludes").value = "";
        }

        function filter(content) {
            return (usernameFilter.includes(content.user.toUpperCase()) || usernameFilter.length == 0) &&
                (includes.some(m => content.message.toUpperCase().split(" ").includes(m)) || includes.length == 0) &&
                (!excludes.some(m => content.message.toUpperCase().split(" ").includes(m)) || excludes.length == 0);
        }

        //clear the chat
        function clear() {
            ids.length = 0;
            document.getElementById("messages").innerHTML = null;
        }

        function stop() {
            stopped = !stopped;
            if (stopped) {
                clearInterval(intervalId);
                document.getElementById("pauseBtn").innerHTML = "&#x23F5 ";
                document.getElementById("pauseBtn").className = "btn btn-outline-success"
            } else {
                intervalId = setInterval(fetchMessages, rate)
                document.getElementById("pauseBtn").innerHTML = "&#x23F8";
                document.getElementById("pauseBtn").className = "btn btn-outline-danger"
            }
        }

        //submit input also when enter is pressed
        document.getElementById("channelSearch").addEventListener("keyup", function (event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                document.getElementById("relayBtn").click();
            }
        });
    </script>
</body>

</html>